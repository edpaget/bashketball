name: Clojure JVM Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432 # Keep the container port consistent

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '24'

      - name: Set up Clojure CLI
        uses: DeLaGuardo/setup-clojure@13.2
        with:
          cli: 'latest'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Or your preferred LTS version

      - name: Cache Clojure dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            .cpcache
            node_modules # Cache npm dependencies
          key: ${{ runner.os }}-clojure-${{ hashFiles('deps.edn') }}-${{ hashFiles('package-lock.json') }} # Include package-lock.json in cache key
          restore-keys: |
            ${{ runner.os }}-clojure-

      - name: Install NPM dependencies
        run: npm ci # Use ci for faster, more reliable installs in CI

      - name: Run Clojure JVM tests
        # Set the DATABASE_URL env var for the tests to connect to the service container
        # Set CLJ_OPTS to configure JVM timezone for tests
        env:
          DATABASE_URL: jdbc:postgresql://localhost:${{ job.services.postgres.ports[5432] }}/testdb?user=testuser&password=testpassword
          CLJ_OPTS: -Duser.timezone=UTC
        run: clojure -X:test

      - name: Run ClojureScript tests
        run: npm run test:cljs
